(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{298:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910174009085.png",alt:"image-20220910174009085"}})]),t._v(" "),s("h2",{attrs:{id:"前提准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前提准备"}},[t._v("#")]),t._v(" 前提准备")]),t._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("注意：安装虚拟机是为了在本地虚拟化Linux环境，便于学习。对应了实际应用场景中，企业的云服务器")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("本地安装虚拟机Vmware、Virtualbox、Parallls")]),t._v(" "),s("p",[t._v("有云服务器也可在服务器上操作")]),t._v(" "),s("p",[t._v("本次使用Vmware16，软件安装过程省略")])]),t._v(" "),s("li",[s("p",[t._v("系统CentOS 7")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.centos.org/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),s("OutboundLink")],1),t._v("下载适合自己的版本")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910151913324.png",alt:"image-20220910151913324"}}),t._v("\n可随意选择一个镜像站下载\n"),s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910152123490.png",alt:"image-20220910152123490"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910152405332.png",alt:"image-20220910152405332"}})]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("版本")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("DVD ISO")]),t._v(" "),s("td",[t._v("标准安装版")])]),t._v(" "),s("tr",[s("td",[t._v("Everything ISO")]),t._v(" "),s("td",[t._v("对完整版安装盘的软件进行补充，集成所有软件。(包含"),s("a",{attrs:{href:"https://so.csdn.net/so/search?q=centos7&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[t._v("centos7"),s("OutboundLink")],1),t._v("的一套完整的软件包，可以用来安装系统或者填充本地镜像)")])]),t._v(" "),s("tr",[s("td",[t._v("Minimal ISO")]),t._v(" "),s("td",[t._v("精简版，自带的软件最少")])]),t._v(" "),s("tr",[s("td",[t._v("NetInstall ISO")]),t._v(" "),s("td",[t._v("网络安装镜像(从网络安装或者救援系统)")])])])])]),t._v(" "),s("li",[s("p",[t._v("在虚拟机中安装CentOS镜像，安装步骤省略")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910153032582.png",alt:"image-20220910153032582"}})]),t._v(" "),s("p",[t._v("安装成功后重启系统登录")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910154037280.png",alt:"image-20220910154037280"}})]),t._v(" "),s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910154207899.png"}})])]),t._v(" "),s("h3",{attrs:{id:"配置虚拟机网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置虚拟机网络"}},[t._v("#")]),t._v(" 配置虚拟机网络")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" addr "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看网络")]),t._v("\n")])])]),s("p",[t._v("可以看到两个网卡 "),s("code",[t._v("lo")]),t._v("和"),s("code",[t._v("ens33")]),t._v("（lo是本地网卡）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910154354632.png",alt:"image-20220910154354632"}})]),t._v(" "),s("p",[t._v("使用vi编辑器打开"),s("code",[t._v("ens33")]),t._v("网络的配置文件，修改启动配置（如何使用vi编辑器："),s("code",[t._v("i")]),t._v("修模式改数据，"),s("code",[t._v("esc")]),t._v("退出，"),s("code",[t._v(":wq")]),t._v("保存退出vi编辑器）")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/sysconfig/network-scripts/ifcfg-ens33\n")])])]),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910154720589.png",alt:"image-20220910154720589"}})]),t._v(" "),s("p",[t._v("重启网络")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl restart network\n")])])]),s("p",[t._v("就能看到ens33被分配在了网络IP（192.168.75.136），但是这个网路是动态分配的内网地址，重启后会可能会变化。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910154905916.png",alt:"image-20220910154905916"}})]),t._v(" "),s("h3",{attrs:{id:"克隆虚拟机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆虚拟机"}},[t._v("#")]),t._v(" 克隆虚拟机")]),t._v(" "),s("p",[t._v("两种克隆方式，选择哪种都可以将前面配置的虚拟机克隆出来新的")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910155137275.png",alt:"image-20220910155137275"}})]),t._v(" "),s("h3",{attrs:{id:"使用ssh连接虚拟机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用ssh连接虚拟机"}},[t._v("#")]),t._v(" 使用SSH连接虚拟机")]),t._v(" "),s("p",[t._v("使用SSH可以方便的在本地连接远程云服务器（对应的就是我们这里装在本地的虚拟机），对其进行")]),t._v(" "),s("p",[t._v("SSH软件很多，比如Xshell，他们的使用都大同小异，我这里使用的是Mac上的Termius，")]),t._v(" "),s("p",[s("strong",[t._v("新建连接")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910155322683.png",alt:"image-20220910155322683"}})]),t._v(" "),s("p",[t._v("主机地址就是云服务器的公网地址，对应就是上面本地虚拟机ens33这个网卡的地址，与公网地址不同，这个地址是内网地址，每次重启都会动态分配，所以我们使用这个地址链接上")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910155529771.png",alt:"image-20220910155529771"}})]),t._v(" "),s("p",[s("strong",[t._v("修改固定IP")])]),t._v(" "),s("p",[t._v("这一步仅仅是因为，ens33这个网卡的地址，每次重启都会动态分配，所以我们使用这个地址每次都需要修改SSH工具的“主机名”，所以，我们改成固定的。（如果你使用的是云服务器，使用公网IP连接，这个公网IP是不会变化的，就不用这一步）")]),t._v(" "),s("p",[t._v("还是进入ens33网卡的配置文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/sysconfig/network-scripts/ifcfg-ens33\n")])])]),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910155943952.png",alt:"image-20220910155943952"}})]),t._v(" "),s("p",[t._v("增加一下配置")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IPADDR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".75.101 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置IP")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NETMASK")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("225.225")]),t._v(".225.0 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#子网掩码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GATEWAY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".75.2 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#网关")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DNS1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.8")]),t._v(".8.8 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DNS服务器地址")]),t._v("\n")])])]),s("p",[t._v("修改文件中BOOTPROTO字段为static后，后IP就固定为了IPADDR的值")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("BOOTPROTO")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("static "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#原来值是dhcp，就是动态获取ip的一个协议")]),t._v("\n")])])]),s("h2",{attrs:{id:"nginx介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx介绍"}},[t._v("#")]),t._v(" Nginx介绍")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- Nginx开源版 http://nginx.org/en/\n\n  官方原始的Nginx版本\n\n- Nginx plus商业版\n\n  开箱即用，集成了大量功能\n\n- Open Resty https://openresty.org/cn/\n\n  OpenResty是一个基于Nginx与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。**更适用于需要大量二次开发的场景，有极强的扩展性**\n\n- Tengine https://tengine.taobao.org/\n\n  由淘宝网发起的Web服务器项目。它在[Nginx (opens new window)](http://nginx.org/)的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站如[淘宝网 (opens new window)](http://www.taobao.com/)，[天猫商城 (opens new window)](http://www.tmall.com/)等得到了很好的检验。相比于Open Resty，扩展性不够强，但是能够满足绝多数使用场景\n")])])]),s("h2",{attrs:{id:"nginx安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx安装"}},[t._v("#")]),t._v(" Nginx安装")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("下载Nginx包")])]),t._v(" "),s("p",[s("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网下载地址"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910161044819.png",alt:"image-20220910161044819"}})]),t._v(" "),s("p",[t._v("使用FTP工具将文件上传到虚拟机中")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("解压Nginx包，并安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-zxvf")]),t._v("  nginx-1.23.1.tar.gz "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#解压到当前目录")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" nginx-1.23.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入解压后的文件夹")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#文件夹中的文件：auto     CHANGES.ru  configure  html     man     src CHANGES  conf        contrib    LICENSE  README")]),t._v("\n")])])]),s("p",[t._v("安装依赖库")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装C编译器")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" gcc\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装pcre库")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" pcre pcre-devel\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装zlib")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" zlib zlib-devel\n")])])]),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" nginx-1.23.1\n./configure "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--prefix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用prefix选项指定安装的目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),s("p",[t._v("启动")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local/nginx/sbin\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 里面是一个nginx的可执行文件")]),t._v("\n\n./nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动这个可执行")]),t._v("\n")])])]),s("p",[s("strong",[t._v("关于防火墙")])]),t._v(" "),s("p",[t._v("关闭防火墙")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("systemctl stop firewalld.service\n")])])]),s("p",[t._v("禁止防火墙开机启动")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("systemctl disable firewalld.service \n")])])]),s("p",[t._v("放行端口")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("firewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/tcp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--permanent")]),t._v(" \n")])])]),s("p",[t._v("重启防火墙")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("firewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reload")]),t._v("\nsystemctl restart firewalld\n")])])]),s("p",[s("strong",[t._v("补充Nginx命令")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("./nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" stop "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#快速停止")]),t._v("\n./nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" quit "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#完成已接受的请求后，停止")]),t._v("\n./nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" reload "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重新加载配置")]),t._v("\n./nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#检查nginx配置是否正确")]),t._v("\n")])])]),s("p",[t._v("查看nginx状态")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ps -ef|grep nginx\n")])])]),s("p",[t._v("启动时：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Nginx/image-20220501205303265.png",alt:"image-20220501205303265"}})]),t._v(" "),s("p",[t._v("停止时：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Nginx/image-20220501205333304.png",alt:"image-20220501205333304"}})])]),t._v(" "),s("li",[s("p",[t._v("注册系统服务")]),t._v(" "),s("p",[t._v("通过系统服务的方式启动nginx")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vi /usr/lib/systemd/system/nginx.service\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Unit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Description")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("After")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("network.target remote-fs.target nss-lookup.target\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("forking\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PIDFile")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/logs/nginx.pid\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecStartPre")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/sbin/nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" /usr/local/nginx/conf/nginx.conf\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecStart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/sbin/nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" /usr/local/nginx/conf/nginx.conf\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecReload")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/sbin/nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" reload\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecStop")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/sbin/nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" stop\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecQuit")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/sbin/nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" quit \n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PrivateTmp")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n   \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Install"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   \n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("WantedBy")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("multi-user.target  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 多用户")]),t._v("\n")])])]),s("p",[t._v("重新加载系统服务")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("systemctl daemon-reload\n")])])]),s("p",[t._v("启动服务")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("systemctl start nginx.service \n")])])]),s("p",[t._v("开机启动")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" nginx.service\n")])])]),s("p",[t._v("配置软链接，以便全局使用nginx命令：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" /usr/local/nginx/sbin/nginx /usr/sbin/nginx\n")])])])])])])]),t._v(" "),s("h2",{attrs:{id:"nginx-目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-目录"}},[t._v("#")]),t._v(" Nginx 目录")]),t._v(" "),s("p",[t._v("进入Nginx的主目录我们可以看到这些文件夹")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\nclient_body_temp  conf  fastcgi_temp  html  logs  proxy_temp  sbin  scgi_temp  uwsgi_temp\n")])])]),s("p",[t._v("其中这几个文件夹在刚安装后是没有的，主要用来存放运行过程中的临时文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("client_body_temp fastcgi_temp proxy_temp scgi_temp\n")])])]),s("p",[s("strong",[t._v("conf")]),t._v(" 用来存放配置文件相关")]),t._v(" "),s("p",[s("strong",[t._v("html")]),t._v(" 用来存放静态文件的默认目录 html、css等")]),t._v(" "),s("p",[s("strong",[t._v("sbin")]),t._v(" nginx的主程序")]),t._v(" "),s("p",[s("strong",[t._v("logs")]),t._v(" 文件夹用于存放日志信息")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tree /usr/local/nginx")]),t._v("\n/usr/local/nginx\n├── client_body_temp                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# POST 大文件暂存目录")]),t._v("\n├── conf                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx所有配置文件的目录")]),t._v("\n│   ├── fastcgi.conf                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fastcgi相关参数的配置文件")]),t._v("\n│   ├── fastcgi.conf.default         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fastcgi.conf的原始备份文件")]),t._v("\n│   ├── fastcgi_params               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fastcgi的参数文件")]),t._v("\n│   ├── fastcgi_params.default       \n│   ├── koi-utf\n│   ├── koi-win\n│   ├── mime.types                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 媒体类型")]),t._v("\n│   ├── mime.types.default\n│   ├── nginx.conf                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这是Nginx默认的主配置文件，日常使用和修改的文件")]),t._v("\n│   ├── nginx.conf.default\n│   ├── scgi_params                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# scgi相关参数文件")]),t._v("\n│   ├── scgi_params.default  \n│   ├── uwsgi_params                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# uwsgi相关参数文件")]),t._v("\n│   ├── uwsgi_params.default\n│   └── win-utf\n├── fastcgi_temp                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fastcgi临时数据目录")]),t._v("\n├── html                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx默认站点目录")]),t._v("\n│   ├── 50x.html                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误页面优雅替代显示文件，例如出现502错误时会调用此页面")]),t._v("\n│   └── index.html                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认的首页文件")]),t._v("\n├── logs                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx日志目录")]),t._v("\n│   ├── access.log                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问日志文件")]),t._v("\n│   ├── error.log                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误日志文件")]),t._v("\n│   └── nginx.pid                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pid文件，Nginx进程启动后，会把所有进程的ID号写到此文件")]),t._v("\n├── proxy_temp                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 临时目录")]),t._v("\n├── sbin                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 可执行文件目录")]),t._v("\n│   └── nginx                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 二进制可执行程序")]),t._v("\n├── scgi_temp                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 临时目录")]),t._v("\n└── uwsgi_temp                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 临时目录")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"基本运行原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本运行原理"}},[t._v("#")]),t._v(" 基本运行原理")]),t._v(" "),s("p",[s("strong",[t._v("Nginx多进程模型和基本请求流程")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220910171916479.png",alt:"image-20220910171916479"}})]),t._v(" "),s("p",[s("strong",[t._v("Nginx的进程是使用经典的「Master-Worker」模型，Nginx在启动后，会有一个master（主进程）进程和多个worker（子进程）进程，主进程用于协调子进程。")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("master")]),t._v("进程主要用来管理worker进程，包含：接收来自外界的信号，向各worker进程发送信号，监控worker进程的运行状态，当worker进程退出后(异常情况下)，会自动重新启动新的worker进程。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("worker")]),t._v("进程主要处理基本的网络事件，多个worker进程之间是对等的，他们同等竞争来自客户端的请求，各进程互相之间是独立的。一个请求，只可能在一个worker进程中处理，一个worker进程，不可能处理其它进程的请求。worker进程的个数是可以设置的，一般会设置与机器cpu核数一致，这里面的原因与nginx的进程模型以及事件处理模型是分不开的。")])])]),t._v(" "),s("h2",{attrs:{id:"nginx配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置"}},[t._v("#")]),t._v(" Nginx配置")]),t._v(" "),s("p",[t._v("后面学习Nginx配置，每次修改配置文件，一定要重载才能生效")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("systemctl reload nginx\n")])])]),s("h3",{attrs:{id:"简化版的nginx-conf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简化版的nginx-conf"}},[t._v("#")]),t._v(" 简化版的nginx.conf")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("worker_processes  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#允许进程数量，建议设置为cpu核心数或者auto自动检测，注意Windows服务器上虽然可以启动多个processes，但是实际只会用其中一个")]),t._v("\n\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    worker_connections  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单个进程最大连接数（最大连接数=连接数*进程数）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    include       mime.types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include是引入关键字，这里引入了mime.types这个配置文件（同在conf目录下，mime.types是用来定义，请求返回的content-type）")]),t._v("\n    default_type  application/octet-stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#mime.types未定义的，使用默认格式application/octet-stream")]),t._v("\n\n    sendfile        on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendfile指令指定nginx是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度。")]),t._v("\n    \n    keepalive_timeout  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#长连接超时时间，单位是秒")]),t._v("\n \n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一个nginx可以启用多个server（虚拟服务器）")]),t._v("\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听端口80")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#接收的域名")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#根目录指向html目录")]),t._v("\n            index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#域名/index 指向 index.html index.htm文件")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 服务器错误码为500 502 503 504，转到"域名/50x.html"')]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("# 指定到html文件夹下找/50x.htm\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"最小配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最小配置"}},[t._v("#")]),t._v(" 最小配置")]),t._v(" "),s("p",[s("strong",[t._v("worker_processes")])]),t._v(" "),s("p",[s("code",[t._v("worker_processes 1;")]),t._v("默认为1，表示开启一个业务进程")]),t._v(" "),s("p",[s("strong",[t._v("worker_connections")])]),t._v(" "),s("p",[s("code",[t._v("worker_connections 1024;")]),t._v("单个业务进程可接受连接数")]),t._v(" "),s("p",[s("strong",[t._v("include mime.types;")])]),t._v(" "),s("p",[s("code",[t._v("include mime.types;")]),t._v(" 引入http mime类型")]),t._v(" "),s("p",[s("strong",[t._v("default_type application/octet-stream;")])]),t._v(" "),s("p",[s("code",[t._v("default_type application/octet-stream;")]),t._v(" 如果mime类型没匹配上，默认使用二进制流的方式传输。")]),t._v(" "),s("p",[s("strong",[t._v("sendfile on;")])]),t._v(" "),s("p",[s("code",[t._v("sendfile on;")]),t._v(" 使用linux的 sendfile(socket, file, len) 高效网络传输，也就是数据0拷贝。 未开启sendfile")]),t._v(" "),s("p",[s("strong",[t._v("sendfile")])]),t._v(" "),s("p",[t._v("打开sendfile，用户请求的数据不用再加载到nginx的内存中，而是直接发送")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220502113913235.png",alt:"image-20220502113913235"}})]),t._v(" "),s("h3",{attrs:{id:"nginx配置使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置使用场景"}},[t._v("#")]),t._v(" Nginx配置使用场景")]),t._v(" "),s("p",[t._v("修改nginx配置文件后，记得重新加载nginx")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl reload nginx\n")])])]),s("p",[s("strong",[t._v("不同二级域名，映射到不同静态网页")])]),t._v(" "),s("p",[t._v("可以写多个server字段，从前向后匹配，先匹配到哪个就用哪个")]),t._v(" "),s("p",[t._v("用户访问"),s("code",[t._v("aa.minboo.cn")]),t._v("，就会走到第一个server配置；"),s("code",[t._v("bb.minboo.cn")]),t._v("走到第二个配置")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(" http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#....其他属性")]),t._v("\n   server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  aa.minboo.cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n            root   html/aa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n            index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  bb.minboo.cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n            root   html/bb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n            index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("不同域名，映射到同一静态页面")])]),t._v(" "),s("p",[s("strong",[t._v("server_name")])]),t._v(" "),s("ul",[s("li",[t._v("可以写多个，用空格分开")]),t._v(" "),s("li",[t._v("使用通配符（*）")]),t._v(" "),s("li",[t._v("使用正则表达式（"),s("a",{attrs:{href:"https://blog.csdn.net/yangyelin/article/details/112976539",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/yangyelin/article/details/112976539"),s("OutboundLink")],1),t._v("）")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   \n   server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  *.minboo.cn  ~^"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("-9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(".minboo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(".cn$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "\\."是转译"."')]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n            root   html/aa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n            index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"反向代理与负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向代理与负载均衡"}},[t._v("#")]),t._v(" 反向代理与负载均衡")]),t._v(" "),s("p",[s("strong",[t._v("反向代理")]),t._v("：这种代理方式叫做，隧道代理。有性能瓶颈，因为所有的数据都经过Nginx，所以Nginx服务器的性能至关重要")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220502173846436.png",alt:"image-20220502173846436"}})]),t._v(" "),s("p",[s("strong",[t._v("负载均衡")]),t._v("：把请求，按照一定算法规则，分配给多台业务服务器（即使其中一个坏了/维护升级，还有其他服务器可以继续提供服务）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220502174023144.png",alt:"image-20220502174023144"}})]),t._v(" "),s("h3",{attrs:{id:"反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[t._v("#")]),t._v(" 反向代理")]),t._v(" "),s("h4",{attrs:{id:"使用proyx-pass进行代理配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用proyx-pass进行代理配置"}},[t._v("#")]),t._v(" 使用proyx_pass进行代理配置")]),t._v(" "),s("p",[t._v("启用proxy_pass，root和index字段就会失效")]),t._v(" "),s("p",[t._v("proxy_pass后的地址必须写完整 "),s("code",[t._v("http://xxx")]),t._v("，不支持https")]),t._v(" "),s("p",[t._v("当访问localhost时（Nginx服务器），网页打开的是"),s("code",[t._v("http://xxx")]),t._v("（应用服务器），网页地址栏写的还是localhost")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   \n  server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n         proxy_pass http://xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#root   html/test; ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#index  index.html index.htm;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以把配置修改成如下，就会反向代理到百度")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   \n  server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n         proxy_pass http://baidu.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#root   html/test; ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#index  index.html index.htm;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),s("p",[s("strong",[t._v("【轮询模式】")])]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("upstream")]),t._v("定义一组地址【在server字段下】 upstream后的别名可随意定义，但是proxy_pass处需要和此别名一致")]),t._v(" "),s("p",[t._v("访问localhost，访问都会代理到"),s("code",[t._v("192.168.75.101:80")]),t._v("和"),s("code",[t._v("192.168.75.103:80")]),t._v("这两个地址之一，每次访问这两个地址轮着切换（后面讲到，因为默认权重相等）")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n upstream httpds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".75.101:80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果是80端口，可以省略不写")]),t._v("\n  server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".75.103:80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n         proxy_pass http://httpds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"负载均衡策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡策略"}},[t._v("#")]),t._v(" 负载均衡策略")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("轮询：默认算法按时间顺序逐一分配到不同的后端服务器;")])]),t._v(" "),s("li",[s("p",[t._v("weight：权重")])]),t._v(" "),s("li",[s("p",[t._v("down：当前server暂不参与负载均衡")])]),t._v(" "),s("li",[s("p",[t._v("backup : 预留的备份服务器； 其它所有的非backup机器down或者忙的时候，请求backup机器")])]),t._v(" "),s("li",[s("p",[t._v("ip_hash：为每一个请求访问的IP的hash结果分配，可以将来自一个IP的固定访问一个后端服务器")])]),t._v(" "),s("li",[s("p",[t._v("url_hash：需要安装模块安装访问的URL的hash结果来分配，这样每个URL定向到同一个后端服务器")])]),t._v(" "),s("li",[s("p",[t._v("least_conn：按照某台机器最少连接数的进行分配访问")])]),t._v(" "),s("li",[s("p",[t._v("hash关键数值：hash 自定义 KEY")])])]),t._v(" "),s("p",[s("strong",[t._v("【轮询")]),t._v("】")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("upstream")]),t._v("定义一组地址【在server字段下】 upstream后的别名可随意定义，但是proxy_pass处需要和此别名一致")]),t._v(" "),s("p",[t._v("访问localhost，访问都会代理到"),s("code",[t._v("192.168.75.101:80")]),t._v("和"),s("code",[t._v("192.168.75.103:80")]),t._v("这两个地址之一，每次访问这两个地址轮着切换（后面讲到，因为默认权重相等）")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n upstream httpds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".75.101:80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果是80端口，可以省略不写")]),t._v("\n  server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".75.103:80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n         proxy_pass http://httpds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("weight：默认为1.weight越大，负载的权重就越大【权重模式】")])]),t._v(" "),s("p",[t._v("访问使用哪个地址的权重，weigth的数值越高表示权重越高")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("upstream httpds{\n    server 192.168.75.101:80 weight=10;\n    server 192.168.75.103:80 weight=40;\n    server 192.168.75.104:80 weight=80;\n}\n")])])]),s("p",[s("strong",[t._v("down：表示当前的server暂时不参与负载")])]),t._v(" "),s("p",[t._v("权重后面加down的表示不参与负载均衡，相当于下线")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("upstream httpds{\n server 192.168.75.101:80 weight=10;\n server 192.168.75.103:80 weight=40 down;\n server 192.168.75.104:80 weight=80;\n}\n")])])]),s("p",[s("strong",[t._v("backup： 其它所有的非backup机器down或者忙的时候，请求backup机器")])]),t._v(" "),s("p",[t._v("如果"),s("code",[t._v("192.168.75.104:80")]),t._v("出现故障，无法提供服务，就用使用backup的这个机器")]),t._v(" "),s("p",[t._v("正常情况下不会使用"),s("code",[t._v("192.168.75.101")]),t._v("，只有当"),s("code",[t._v("192.168.75.104")]),t._v("发生故障时才会使用该服务器")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("upstream httpds{\n server 192.168.75.101:80 weight=10 backup;\n server 192.168.75.103:80 weight=40 down;\n server 192.168.75.104:80 weight=80;\n}\n")])])]),s("h4",{attrs:{id:"其他负载均衡策略-不常用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他负载均衡策略-不常用"}},[t._v("#")]),t._v(" 其他负载均衡策略（不常用）")]),t._v(" "),s("p",[t._v("【"),s("strong",[t._v("ip_hash")]),t._v("】")]),t._v(" "),s("p",[t._v("根据客户端的ip地址转发同一台服务器，可以保持会话")]),t._v(" "),s("p",[s("strong",[t._v("【least_conn】")])]),t._v(" "),s("p",[t._v("最少连接访问")]),t._v(" "),s("p",[s("strong",[t._v("【url_hash】")])]),t._v(" "),s("p",[t._v("根据用户访问的url定向转发请求")]),t._v(" "),s("p",[s("strong",[t._v("【fair】")])]),t._v(" "),s("p",[t._v("根据后端服务器响应时间转发请求")]),t._v(" "),s("h2",{attrs:{id:"动静分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动静分离"}},[t._v("#")]),t._v(" 动静分离")]),t._v(" "),s("blockquote",[s("p",[t._v("为了提高网站的响应速度，减轻程序服务器（Tomcat，Jboss等）的负载，对于静态资源，如图片、js、css等文件，可以在反向代理服务器中进行缓存，这样浏览器在请求一个静态资源时，代理服务器就可以直接处理，而不用将请求转发给后端服务器。对于用户请求的动态文件，如servlet、jsp，则转发给Tomcat，Jboss服务器处理，这就是动静分离。即动态文件与静态文件的分离。")])]),t._v(" "),s("h3",{attrs:{id:"动静分类原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动静分类原理"}},[t._v("#")]),t._v(" 动静分类原理")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/1a28235590b24a13cef2173e4ce55c7a.webp",alt:"img"}}),t._v(" "),s("p",[t._v("动静分离可通过location对请求url进行匹配，将网站静态资源（HTML，JavaScript，CSS，img等文件）与后台应用分开部署，提高用户访问静态代码的速度，降低对后台应用访问。通常将静态资源放到nginx中，动态资源转发到tomcat服务器中。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/1650505887062-47f2f7d3-d565-4184-9dee-5d8a2651ef53.png",alt:"image.png"}})]),t._v(" "),s("p",[s("strong",[t._v("例子：")])]),t._v(" "),s("ul",[s("li",[t._v("如果请求的资源地址是"),s("code",[t._v("location/")]),t._v("，"),s("code",[t._v("/")]),t._v("的优先级比较低，如果下面的location没匹配到，就会走"),s("a",{attrs:{href:"http://192.168.75.104:8080",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://192.168.75.104:8080"),s("OutboundLink")],1),t._v("这个地址的机器")]),t._v(" "),s("li",[t._v("如果请求的资源地址是"),s("code",[t._v("location/css/*")]),t._v("，就会被匹配到nginx的html目录下的css文件夹中（我们把css静态资源放在这个位置）")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /的优先级比较低，如果下面的location没匹配到，就会走http://xxx这个地址的机器")]),t._v("\n     proxy_pass http://192.168.75.104:8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    location /css "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# root指的是html，location/css指的是root下的css，所以地址就是html/css")]),t._v("\n     root html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("使用正则")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("location ~*/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("js"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("css"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("img"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    root html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"location匹配顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location匹配顺序"}},[t._v("#")]),t._v(" location匹配顺序")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("多个正则location直接按书写顺序匹配，成功后就不会继续往后面匹配")])]),t._v(" "),s("li",[s("p",[t._v("普通（非正则）location会一直往下，直到找到匹配度最高的（最大前缀匹配）")])]),t._v(" "),s("li",[s("p",[t._v("当普通location与正则location同时存在，如果正则匹配成功,则不会再执行普通匹配")])]),t._v(" "),s("li",[s("p",[t._v("所有类型location存在时，“=”匹配 > “^~”匹配 > 正则匹配 > 普通（最大前缀匹配）")])])]),t._v(" "),s("h2",{attrs:{id:"url重写-urlrewrite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url重写-urlrewrite"}},[t._v("#")]),t._v(" URL重写（URLRewrite）")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("rewrite是URL重写的关键指令，根据regex（正则表达式）部分内容，重定向到replacement，结尼是flag标记。\n\nrewrite    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("replacement"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n关键字    正则    替代内容     flagt标记\n\n正则：per1森容正则表达式语句进行规则匹配\n替代内容：将正则匹配的内容替换成replacement\n\nflag标记说明：\nlast  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#本条规则匹配完成后，继续向下匹配新的1ocation URI规则")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#本条规则匹配完成即终止，不再匹配后面的任何规则")]),t._v("\n\nredirect "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#返回302临重定向，游览器地址会显示跳转后的URL地址")]),t._v("\npermanent "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#返回301永久重定向，测览器地址栏会显示跳转后的URL地址")]),t._v("\n")])])]),s("p",[t._v("浏览器地址栏访问 "),s("code",[t._v("xxx/123.html")]),t._v("实际上是访问"),s("code",[t._v("xxx/index.jsp?pageNum=123")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     // URL重写\n     rewrite ^/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("-9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".html$ /index.jsp?pageNum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     proxy_pass http://xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"负载均衡-urlrewirte"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡-urlrewirte"}},[t._v("#")]),t._v(" 负载均衡+URLRewirte")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minboo-blog-img.oss-cn-guangzhou.aliyuncs.com/img/image-20220503121135171.png",alt:"image-20220503121135171"}})]),t._v(" "),s("p",[t._v("上图中，应用服务器，不能直接被外网访问到，只能通过Nginx服务器进行访问（使用proxy_pass），这时候这台Nginx服务器就成为了网关服务器（承担入口的功能）")]),t._v(" "),s("p",[t._v("所以，我们启动应用服务器的防火墙，设置其只能接受这台Nginx服务器的请求")]),t._v(" "),s("p",[t._v("此前我们从"),s("code",[t._v("192.168.75.101")]),t._v("Nginx服务器反向代理到"),s("code",[t._v("192.168.75.104")]),t._v("Tomcat服务器")]),t._v(" "),s("p",[s("strong",[t._v("开启被反向代理服务器防火墙")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("systemctl start firewalld\n")])])]),s("p",[s("strong",[t._v("重载规则")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("firewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reload")]),t._v("\n")])])]),s("p",[s("strong",[t._v("查看已配置规则")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("firewall-cmd --list-all\n")])])]),s("p",[s("strong",[t._v("添加rich规则，添加指定端口和ip访问")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("firewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--permanent")]),t._v(" --add-rich-rule"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rule family="')]),t._v("ipv4"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" source address="')]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".75.101"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" port protocol="')]),t._v("tcp"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" port="')]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" accept"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加指定端口和ip访问，此条命令表示允许192.168.75.101访问当前服务器的8080端口")]),t._v("\n")])])]),s("p",[s("strong",[t._v("移除rich规则")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("firewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--permanent")]),t._v(" --remove-rich-rule"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rule family="')]),t._v("ipv4"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" source address="')]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".75.101"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" port port="')]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" protocol="')]),t._v("tcp"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" accept"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("重启")])]),t._v(" "),s("p",[t._v("移除和添加规则都要重启才能生效")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("firewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reload")]),t._v("\n")])])]),s("p",[s("strong",[t._v("查看所有规则")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("firewall-cmd --list-all "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所有开启的规则")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);